name: Build and Publish NuGet to GitHub Packages

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*" # Uruchom, gdy tag zaczyna się od v (np. v1.0.0)
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write # Ważne: to uprawnienie jest potrzebne do publikowania pakietów

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.x"

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Test
        run: dotnet test --no-build --verbosity normal

      - name: Pack NuGet package
        run: dotnet pack --configuration Release --no-build --output nupkg
        # Możesz dodać --version-suffix "$(date +%s)" dla wersji deweloperskich

      - name: Upload NuGet package as artifact
        uses: actions/upload-artifact@v4
        with:
          name: nuget-packages
          path: nupkg/*.nupkg

      - name: Publish NuGet package to GitHub Packages
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
        run: |
          # Dodaj źródło pakietów GitHub do konfiguracji NuGet
          dotnet nuget add source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json --name github

          # Wypchnij pakiet do GitHub Packages
          dotnet nuget push nupkg/*.nupkg --source github --api-key ${{ secrets.GITHUB_TOKEN }}
        env:
          NUGET_API_KEY: ${{ secrets.GITHUB_TOKEN }} # Klucz API dla GitHub Packages to GITHUB_TOKEN
